{
  "license": "MIT",
  "nodeModulesDir": "auto",
  "fmt": {
    "options": {
      "indentWidth": 2,
      "lineWidth": 120,
      "proseWrap": "always",
      "semiColons": true,
      "singleQuote": false,
      "useTabs": false
    },

    "include": ["**/*.ts", "**/*.json"],
    "exclude": ["node_modules", "vendor", "**/dist", "**/external/storage"]
  },
  "lint": {
    "rules": {
      "include": ["verbatim-module-syntax"],
      "exclude": [
        "no-namespace",
        "no-explicit-any",
        "no-empty-interface",
        "no-empty",
        "ban-types"
      ]
    }
  },
  "vendor": true,
  "workspace": {
    "members": ["apps/preview", "libs/engine"]
  },
  "tasks": {
    "build:preview": {
      "description": "Build the preview application",
      "command": "deno task -f app-preview build"
    },
    "dev:preview": {
      "description": "Run development server for preview",
      "command": "deno task -f app-preview dev"
    },
    "preview:preview": {
      "description": "Preview the built preview application",
      "command": "deno task -f app-preview preview"
    },
    "build:engine": {
      "description": "Build the engine",
      "command": "deno task -f lib-engine build"
    },
    "test:engine": {
      "description": "Test the engine",
      "command": "deno task -f lib-engine test"
    },
    "dev:docker:preview": {
      "description": "Run development server for preview in Docker",
      "command": "docker compose -f docker-compose.yml watch app-development"
    },
    "preview:docker:preview": {
      "description": "Build the preview application in Docker",
      "command": "docker compose -f docker-compose.yml up app-production --build"
    }
  },
  "imports": {
    "@rsbuild/core": "npm:@rsbuild/core@^1.3.15",
    "@std/fs": "jsr:@std/fs@1.0.17",
    "@std/path": "jsr:@std/path@1.0.9",
    "@std/dotenv": "jsr:@std/dotenv@0.225.3",
    "@cliffy/ansi": "jsr:@cliffy/ansi@1.0.0-rc.7",
    "@std/testing": "jsr:@std/testing@1.0.12",
    "@std/expect": "jsr:@std/expect@1.0.16"
  }
}
